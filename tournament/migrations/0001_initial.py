# Generated by Django 5.1 on 2025-05-25 12:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Статус заявки',
                'verbose_name_plural': 'Статусы заявок',
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('level', models.CharField(choices=[('областной', 'Областной'), ('федеральный', 'Федеральный'), ('всероссийский', 'Всероссийский'), ('международный', 'Международный')], max_length=20)),
                ('age_category', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('registration_deadline', models.DateField()),
            ],
            options={
                'verbose_name': 'Турнир',
                'verbose_name_plural': 'Турниры',
            },
        ),
        migrations.CreateModel(
            name='WeightCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=10)),
                ('weight', models.FloatField()),
            ],
            options={
                'verbose_name': 'Весовая категория',
                'verbose_name_plural': 'Весовые категории',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainer_name', models.CharField(max_length=255)),
                ('sport_rank', models.CharField(max_length=50)),
                ('comment', models.TextField(blank=True)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('athlete_name', models.CharField(max_length=255)),
                ('athlete_birth_date', models.DateField()),
                ('athlete_gender', models.CharField(max_length=10)),
                ('athlete_region', models.CharField(max_length=100)),
                ('athlete_federal_district', models.CharField(max_length=100)),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.applicationstatus')),
                ('tournament', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
                ('weight_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.weightcategory')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport', models.FileField(blank=True, null=True, upload_to='documents/passport/')),
                ('birth_certificate', models.FileField(blank=True, null=True, upload_to='documents/birth_certificate/')),
                ('oms_policy', models.FileField(blank=True, null=True, upload_to='documents/oms_policy/')),
                ('accident_insurance', models.FileField(blank=True, null=True, upload_to='documents/accident_insurance/')),
                ('medical_clearance', models.FileField(blank=True, null=True, upload_to='documents/medical_clearance/')),
                ('school_certificate', models.FileField(blank=True, null=True, upload_to='documents/school_certificate/')),
                ('rank_assignment_order', models.FileField(blank=True, null=True, upload_to='documents/rank_assignment/')),
                ('antidoping_certificate', models.FileField(blank=True, null=True, upload_to='documents/antidoping/')),
                ('consent_to_personal_data', models.FileField(blank=True, null=True, upload_to='documents/consent/')),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='tournament.application')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('tournament', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
            },
        ),
        migrations.CreateModel(
            name='RankSignificance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_count', models.IntegerField()),
                ('participant_count', models.IntegerField()),
                ('rank_level', models.CharField(max_length=50)),
                ('tournament', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
            ],
            options={
                'verbose_name': 'Разрядная значимость',
                'verbose_name_plural': 'Разрядные значимости',
            },
        ),
        migrations.CreateModel(
            name='ParticipantList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport_rank', models.CharField(max_length=50)),
                ('federal_district', models.CharField(max_length=100)),
                ('birth_date', models.DateField()),
                ('userApplication', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.application')),
                ('tournament', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tournament.tournament')),
                ('weight_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tournament.weightcategory')),
            ],
            options={
                'verbose_name': 'Участник турнира',
                'verbose_name_plural': 'Список участников',
            },
        ),
    ]
